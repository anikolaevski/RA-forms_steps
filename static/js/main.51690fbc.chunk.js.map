{"version":3,"sources":["DispSteps.js","App.js","index.js"],"names":["workSteps","DispSteps","useState","items","steps","setSteps","className","id","type","name","onClick","evt","preventDefault","sdat","document","querySelector","sdis","sd","inpStr","ar","split","formatTableDate","value","sdd","rec","find","o","date","distance","parseInt","toString","push","sort","a","b","adate","formatInputDate","map","DispStep","item","prop","data-id","target","parentNode","row","title","el","key","findIndex","getAttribute","splice","str","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.51690fbc.chunk.js","sourcesContent":["import React, {useState} from 'react';\n// import shortid from 'shortid';\n\nconst workSteps = [];\n// [{\n//   // id: shortid.generate(),\n//   date: GetFormattedDate(new Date()),\n//   distance: \"10\"\n// }];\n\nexport function DispSteps() {\n  const [steps, setSteps] = useState({items: workSteps});\n\n  // console.log(steps);\n  const onSubmit = (evt) => {\n    evt.preventDefault();\n  // eslint-disable-next-line no-undef\n  const sdat = document.querySelector('#step-input-date');\n  // eslint-disable-next-line no-undef\n  const sdis = document.querySelector('#step-input-distance');\n    if (!sdat || !sdis) { return; }\n    const sd = formatTableDate(sdat.value);\n    const sdd = sdis.value;\n    if (!sd || !sdd) { return; }\n    const rec = workSteps.find(o => o.date === sd);\n    if (rec) {\n      rec.distance = (parseInt(rec.distance,10) + parseInt(sdd,10)).toString();\n      setSteps( () => ({items: workSteps}));\n    } else {\n      workSteps.push({\n        // id: shortid.generate(),\n        date: sd,\n        distance: sdd\n      });\n      workSteps.sort((a,b) => {\n        const adate = formatInputDate(a.date);\n        const bdate = formatInputDate(b.date);\n        return (bdate > adate)? 1 : -1;\n      });\n      setSteps(() => ({items: workSteps}));\n    }\n    // console.log('workSteps =',workSteps, 'steps =', steps);\n  }\n\n  return (\n    <div className=\"step-list\">\n      <h2>Учёт тренировок</h2>\n      <form>\n      {/* onSubmit={onSubmit} */}\n        <table className=\"step-table\">\n          <thead>\n            <tr>\n              <th className=\"step-table-header\">Дата</th>\n              <th className=\"step-table-header\">Пройдено км</th>\n              <th></th>            \n            </tr>\n            <tr>\n              <td className=\"step-table-cell\"><input id=\"step-input-date\" className=\"step-border\" type=\"date\" name=\"date\"></input></td>\n              <td className=\"step-table-cell\"><input id=\"step-input-distance\" className=\"step-border\" type=\"text\" name=\"distance\"></input></td>\n              <td className=\"step-table-cell\"><button className=\"step-border\" onClick={onSubmit}>Ok</button></td>\n            </tr>\n            <tr>\n              <th className=\"step-table-header\">Дата<br/><br/></th>\n              <th className=\"step-table-header\">Пройдено км<br/><br/></th>\n              <th className=\"step-table-header\">Действия<br/><br/></th>\n            </tr>\n          </thead>\n          <tbody className=\"step-border\">\n            {steps.items.map( o => <DispStep key={o.date} item={o} setSteps={setSteps}/>)}\n          </tbody>\n        </table>\n      </form>\n    </div>\n  );\n}\n\nfunction DispStep(prop) {\n  // console.log(prop);\n  const EditRec = (evt) => {\n    const el = evt.target.parentNode.parentNode.parentNode;\n    if (!el) { return; }\n    const row = workSteps.find(o => o.date === prop.item.date);\n    // console.log(el.getAttribute('data-id'), row);\n    if (!row) { return; }\n  // eslint-disable-next-line no-undef\n    const sdat = document.querySelector('#step-input-date');\n  // eslint-disable-next-line no-undef\n  const sdis = document.querySelector('#step-input-distance');\n    if (!sdat || !sdis) { return; }\n    sdat.value = formatInputDate(row.date);\n    sdis.value = row.distance;\n  };\n  const DelRec = (evt) => {\n    const el = evt.target.parentNode.parentNode.parentNode;\n    if (!el) { return; }\n    const key = workSteps.findIndex(o => o.date === el.getAttribute('data-id'));\n    if (key == -1) { return; }\n    workSteps.splice(key,1);\n    // console.log(workSteps);\n    prop.setSteps(() => ({items: workSteps}));\n  };\n  return (\n    <tr data-id={prop.item.date}>\n      <td className=\"step-table-cell\">{prop.item.date}</td>\n      <td className=\"step-table-cell\">{prop.item.distance}</td>\n      <td className=\"step-table-cell\">\n        <span><i className=\"fas fa-pencil-alt\" onClick={EditRec} title=\"Редактировать\"></i></span>\n        <span><i className=\"fas fa-times\" onClick={DelRec} title=\"Удалить\"></i></span>\n      </td>\n    </tr>\n  );\n}\n\n// function GetFormattedDate(dat) {\n//   const dd = dat.getDate();\n//   const mm = (dat.getMonth() + 101).toString().substring(1, 3);\n//   // eslint-disable-next-line prefer-template\n//   return [(dd < 10 ? `0${dd}` : dd), mm, dat.getFullYear()].join('.');\n// }\n\n// string date --> into input format\nfunction formatInputDate(str) {\n  const ar = str.split('.');\n  return (`${ar[2]}-${ar[1]}-${ar[0]}`);\n}\n\n// string date --> into disp format\nfunction formatTableDate(inpStr) {\n  const ar = inpStr.split('-');\n  return (`${ar[2]}.${ar[1]}.${ar[0]}`);\n}\n\n","import React from 'react';\n\nimport './App.css';\nimport './css/main.css';\nimport {DispSteps} from './DispSteps';\n\nexport default function App() {\n  return (<DispSteps  />);\n}\n\n// items={items}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  /* eslint-disable-next-line no-undef */\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}